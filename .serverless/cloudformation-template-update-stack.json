{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "WebLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/QShelter-Admin-dev-web"
      }
    },
    "ArtisanLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/QShelter-Admin-dev-artisan"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "QShelter-Admin",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/QShelter-Admin-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/QShelter-Admin-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "QShelter-Admin",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "WebLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/QShelter-Admin/dev/1702657751629-2023-12-15T16:29:11.629Z/QShelter-Admin.zip"
        },
        "Handler": "public/index.php",
        "Runtime": "provided.al2",
        "FunctionName": "QShelter-Admin-dev-web",
        "MemorySize": 1024,
        "Timeout": 28,
        "Environment": {
          "Variables": {
            "APP_ENV": "production",
            "APP_KEY": "base64:/0uQEu8R725TIA4laWZbzxRKMz0l3abreRriI7acjwI=",
            "APP_DEBUG": "true",
            "APP_URL": "http://localhost",
            "DB_CONNECTION": "mysql",
            "DB_HOST": "rdsqsdb.cfpryhmlribs.us-east-1.rds.amazonaws.com",
            "DB_PORT": "3306",
            "DB_DATABASE": "defaultdb",
            "DB_USERNAME": "qShelterDB",
            "DB_PASSWORD": "8kaJiDp!lE)",
            "MAIL_MAILER": "smtp",
            "MAIL_HOST": "smtp.gmail.com",
            "MAIL_PORT": "465",
            "MAIL_USERNAME": "qshelter.000@gmail.com",
            "MAIL_PASSWORD": "ptpkxkitbdedrbcy",
            "MAIL_ENCRYPTION": "ssl",
            "MAIL_FROM_ADDRESS": "noreply@quickshelter.ng",
            "MAIL_FROM_NAME": "QucikShelter"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:534081306603:layer:php-82-fpm:47"
        ]
      },
      "DependsOn": [
        "WebLogGroup"
      ]
    },
    "ArtisanLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/QShelter-Admin/dev/1702657751629-2023-12-15T16:29:11.629Z/QShelter-Admin.zip"
        },
        "Handler": "artisan",
        "Runtime": "provided.al2",
        "FunctionName": "QShelter-Admin-dev-artisan",
        "MemorySize": 1024,
        "Timeout": 720,
        "Environment": {
          "Variables": {
            "APP_ENV": "production",
            "APP_KEY": "base64:/0uQEu8R725TIA4laWZbzxRKMz0l3abreRriI7acjwI=",
            "APP_DEBUG": "true",
            "APP_URL": "http://localhost",
            "DB_CONNECTION": "mysql",
            "DB_HOST": "rdsqsdb.cfpryhmlribs.us-east-1.rds.amazonaws.com",
            "DB_PORT": "3306",
            "DB_DATABASE": "defaultdb",
            "DB_USERNAME": "qShelterDB",
            "DB_PASSWORD": "8kaJiDp!lE)",
            "MAIL_MAILER": "smtp",
            "MAIL_HOST": "smtp.gmail.com",
            "MAIL_PORT": "465",
            "MAIL_USERNAME": "qshelter.000@gmail.com",
            "MAIL_PASSWORD": "ptpkxkitbdedrbcy",
            "MAIL_ENCRYPTION": "ssl",
            "MAIL_FROM_ADDRESS": "noreply@quickshelter.ng",
            "MAIL_FROM_NAME": "QucikShelter"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:534081306603:layer:php-82:47",
          "arn:aws:lambda:us-east-1:534081306603:layer:console:57"
        ]
      },
      "DependsOn": [
        "ArtisanLogGroup"
      ]
    },
    "WebLambdaVersionR8502eMKZyibQovgQ49A1vKeqK8FvbiORT8BYHhZbhQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WebLambdaFunction"
        },
        "CodeSha256": "pXzLFVSntqIJK7/eU8RNRk+ACamKpKn2qjuJ1RsGQHo="
      }
    },
    "ArtisanLambdaVersiona0p00xqES9UYtx9OzWQTOKRgeOQNAtIB9LVNojDikTM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ArtisanLambdaFunction"
        },
        "CodeSha256": "pXzLFVSntqIJK7/eU8RNRk+ACamKpKn2qjuJ1RsGQHo="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-QShelter-Admin",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "WebLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "WebLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationWeb": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "WebLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteDefault": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "$default",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationWeb"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationWeb"
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-QShelter-Admin-dev-ServerlessDeploymentBucketName"
      }
    },
    "WebLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WebLambdaVersionR8502eMKZyibQovgQ49A1vKeqK8FvbiORT8BYHhZbhQ"
      },
      "Export": {
        "Name": "sls-QShelter-Admin-dev-WebLambdaFunctionQualifiedArn"
      }
    },
    "ArtisanLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ArtisanLambdaVersiona0p00xqES9UYtx9OzWQTOKRgeOQNAtIB9LVNojDikTM"
      },
      "Export": {
        "Name": "sls-QShelter-Admin-dev-ArtisanLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-QShelter-Admin-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-QShelter-Admin-dev-HttpApiUrl"
      }
    }
  }
}